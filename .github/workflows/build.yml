---
name: Builds

on:
  push:
  #  branches-ignore:
  #    - main
  pull_request:
    branches:
      - main
    types:
      - closed
      - opened
      - reopened
      - synchronize
      - auto_merge_enabled
  workflow_dispatch:
    inputs:
      rebuild:
        description: "Re build container?"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  builds:
    name: Container ${{ matrix.type }}
    #if: ${{ contains(fromJson('["renovate/", "dev/","revert"]'), github.head_ref) }} || ${{ contains(fromJson('["renovate/", "dev/","revert"]'), github.ref_name) }} || ${{ inputs.rebuild == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      max-parallel: 5
      matrix:
        type:
          - nvenc
          - ubuntu2204
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout from repository
        uses: actions/checkout@v4.1.4

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.type }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

            # minimal (short sha)
            type=sha,enable=true,priority=100,prefix=,suffix=,format=short

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5.0.0
        with:
          context: Dockerfile.${{ matrix.type }}
          push: true # ${{ contains( github.event.pull_request.merged, true ) || inputs.rebuild == 'true' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
