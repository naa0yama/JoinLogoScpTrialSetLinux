#- -------------------------------------------------------------------------------------------------
#- Global
#-
ARG DEBIAN_FRONTEND=noninteractive
ARG DEBCONF_NOWARNINGS=yes
ARG PYTHONUNBUFFERED=1
ARG TZ=Asia/Tokyo

# NodeJs version
ARG NODE_VERSION=18

# AviSynthPlus
## Ref: https://github.com/AviSynth/AviSynthPlus/releases
ARG AVISYNTHPLUS_VERSION=v3.7.3

# retry dns and some http codes that might be transient errors
ARG WGET_OPTS="--retry-on-host-error --retry-on-http-error=429,500,502,503"

#- -------------------------------------------------------------------------------------------------
#- Builder
#-
FROM ubuntu:jammy as base
# ARG は、利用する各ステージごとに宣言する必要がある。
ARG DEBIAN_FRONTEND
ARG DEBCONF_NOWARNINGS

ARG NODE_VERSION

ARG TZ
ENV TZ=${TZ}

RUN set -eux && \
    # Dependencies
    apt-get update && \
    apt-get -y install --no-install-recommends \
    binutils \
    ca-certificates \
    curl \
    gnupg \
    less \
    tzdata \
    wget \
    wget && \
    \
    ## Node setup
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --no-tty --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_${NODE_VERSION}.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get install -y --no-install-recommends \
    nodejs \
    npm && \
    \
    # Cleanup \
    apt -y autoremove && \
    apt -y clean && \
    rm -rf /var/lib/apt/lists/*

SHELL ["/bin/bash", "-c"]

#- -------------------------------------------------------------------------------------------------
#- Build modules
#-
FROM base as build-modules
# ARG は、利用する各ステージごとに宣言する必要がある。
ARG DEBCONF_NOWARNINGS
ARG DEBIAN_FRONTEND
ARG PYTHONUNBUFFERED
ARG WGET_OPTS

ARG PREFIX="/opt"
ENV LD_LIBRARY_PATH="${PREFIX}/lib:${PREFIX}/lib64"
ENV PKG_CONFIG_PATH="${PREFIX}/share/pkgconfig:${PREFIX}/lib/pkgconfig:${PREFIX}/lib64/pkgconfig"

# AviSynthPlus
ARG AVISYNTHPLUS_VERSION

# l-smash-source
## Ref: https://github.com/HomeOfAviSynthPlusEvolution/L-SMASH-Works/releases
ARG LSMASHSOURCE_VERSION=1170.0.0.0
#20220505   OK
#20230716   OK
#1156.0.0.0 OK
#1170.0.0.0 OK    20240304    VapourSynth: added XYZ12LE
#1183.0.0.0 NG    20240317    Fixed the index recreation when audio stream
#1187.0.0.0 NG    20240402
#1192.0.0.0 NG    20240407    LSMASHAudioSource/LWLibavAudioSource
#1194.0.0.0 NG    20240408    LSMASHAudioSource

# FFmpeg
## Ref: https://ffmpeg.org/releases/
ARG FFMPEG_VERSION=6.1.1
ARG FFMPEG_URL="https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2"

# Create directory
RUN set -eux && mkdir -p "${PREFIX}" "${PREFIX}/src"

# Build Dependencies
RUN set -eux && \
    apt-get update && \
    apt-get -y install --no-install-recommends \
    apt-file \
    autoconf \
    automake \
    build-essential \
    checkinstall \
    cmake \
    git-core \
    libass-dev \
    libboost-all-dev \
    libfdk-aac-dev \
    libfreetype6-dev \
    libgnutls28-dev \
    libmp3lame-dev \
    libtool \
    libunistring-dev \
    libvorbis-dev \
    libx264-dev \
    meson \
    ninja-build \
    pkg-config \
    texinfo \
    yasm \
    zlib1g-dev && \
    \
    # Cleanup \
    apt -y autoremove && \
    apt -y clean && \
    rm -rf /var/lib/apt/lists/*

## AviSynth+
RUN set -eux && \
    cd "${PREFIX}" && \
    git clone --depth 1 -b ${AVISYNTHPLUS_VERSION} https://github.com/AviSynth/AviSynthPlus.git && \
    cd AviSynthPlus && \
    mkdir avisynth-build && \
    cd avisynth-build && \
    cmake ../ -G Ninja -DCMAKE_INSTALL_PREFIX="${PREFIX}" && \
    ninja && \
    checkinstall --pkgname=avisynth --pkgversion="$(grep -r \
    Version avs_core/avisynth.pc | cut -f2 -d " ")-$(date --rfc-3339=date | \
    sed 's/-//g')-git" --backup=no --deldoc=yes --delspec=yes --deldesc=yes \
    --strip=yes --stripso=yes --addso=yes --fstrans=no --default ninja install && \
    ldconfig && \
    cd "${PREFIX}" && \
    mv -v AviSynthPlus "${PREFIX}/src"

## FFmpeg
#ADD "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" /dev/null
RUN set -eux && \
    cd "${PREFIX}" && \
    wget ${WGET_OPTS} -O ffmpeg.tar.bz2     "${FFMPEG_URL}" && \
    wget ${WGET_OPTS} -O ffmpeg.tar.bz2.asc "${FFMPEG_URL}.asc" && \
    curl -sfSL https://ffmpeg.org/ffmpeg-devel.asc | gpg --import && \
    gpg --verify ffmpeg.tar.bz2.asc ffmpeg.tar.bz2 && \
    \
    tar xf ffmpeg.tar.bz2 && \
    cd ffmpeg-* && \
    ./configure \
    --disable-encoders \
    --disable-decoders \
    --enable-decoder=aac \
    --enable-decoder=aac_fixed \
    --enable-decoder=aac_latm \
    --enable-decoder=avs \
    --enable-decoder=avui \
    --enable-decoder=mpeg2_v4l2m2m \
    --enable-decoder=mpeg2video \
    --enable-decoder=mpegvideo \
    \
    --disable-hwaccels \
    --disable-muxers \
    --disable-demuxers \
    --enable-demuxer=aac \
    --enable-demuxer=avs \
    --enable-demuxer=avs2 \
    --enable-demuxer=avs3 \
    --enable-demuxer=mpegts \
    --enable-demuxer=mpegtsraw \
    \
    --disable-parsers \
    --enable-parser=aac \
    # Unable to build av1 exclude
    --enable-parser=av1 \
    --enable-parser=avs2 \
    --enable-parser=avs3 \
    --enable-parser=mpegaudio \
    --enable-parser=mpegvideo \
    \
    --disable-bsfs \
    --enable-bsf=aac_adtstoasc \
    \
    --disable-protocols \
    --enable-protocol=file \
    \
    --disable-indevs \
    --disable-outdevs \
    --disable-devices \
    --disable-filters \
    --disable-shared \
    --enable-gpl \
    --enable-nonfree \
    --enable-small \
    --enable-static \
    --enable-version3 \
    --extra-cflags="--static" \
    --extra-libs="-static" \
    --pkg-config-flags="--static" \
    --prefix="${PREFIX}" > /_configure.log && \
    chmod 644 /_configure.log && \
    make -j$(nproc) install && \
    hash -r && \
    cd "${PREFIX}" && \
    mv -v ffmpeg* "${PREFIX}/src"

## Install obuparse
RUN set -eux && \
    cd "${PREFIX}" && \
    git clone --depth 1 https://github.com/dwbuiten/obuparse.git && \
    cd obuparse && \
    sed -i'' -e "s@PREFIX=/usr/local@PREFIX=${PREFIX}@g" Makefile && \
    make -j$(nproc) && \
    make install -j$(nproc) && \
    cd "${PREFIX}" && \
    mv -v obuparse "${PREFIX}/src"

## l-smash
RUN set -eux && \
    cd "${PREFIX}" && \
    git clone --depth 1 https://github.com/vimeo/l-smash.git && \
    cd l-smash && \
    ./configure \
    --enable-shared \
    --extra-cflags="-I${PREFIX}/include" \
    --extra-ldflags="-L${PREFIX}/lib" \
    --prefix="${PREFIX}" \
    && \
    make -j$(nproc) && \
    make -j$(nproc) install && \
    ldconfig && \
    cd "${PREFIX}" && \
    mv -v l-smash "${PREFIX}/src"

## l-smash-source
RUN set -eux && \
    cd "${PREFIX}" && \
    git clone --depth 1 -b ${LSMASHSOURCE_VERSION} \
    https://github.com/HomeOfAviSynthPlusEvolution/L-SMASH-Works.git && \
    cd L-SMASH-Works/AviSynth && \
    LDFLAGS="-Wl,-Bsymbolic" meson build && \
    cd build && \
    ninja -v && \
    ninja install && \
    ldconfig && \
    cd "${PREFIX}" && \
    mv -v L-SMASH-Works "${PREFIX}/src"

## join_logo_scp_trial build
COPY modules    "${PREFIX}/src/JLSTSL/modules"
ARG _BINDIR="${PREFIX}/src/JLSTSL/modules/join_logo_scp_trial/bin/"
RUN set -eux && \
    cd "${PREFIX}/src/JLSTSL/modules/chapter_exe/src" && \
    sed -i'' -e "s@-I/usr/local/include/avisynth@$(pkg-config --cflags --libs avisynth)@g" Makefile && \
    make -j$(nproc) && \
    mv -v chapter_exe "${_BINDIR}"

RUN set -eux && \
    cd "${PREFIX}/src/JLSTSL/modules/logoframe/src" && \
    sed -i'' -e "s@-I/usr/local/include/avisynth@$(pkg-config --cflags --libs avisynth)@g" Makefile && \
    make -j$(nproc) && \
    mv -v logoframe "${_BINDIR}"

RUN set -eux && \
    cd "${PREFIX}/src/JLSTSL/modules/join_logo_scp/src" && \
    make -j$(nproc) && \
    mv -v join_logo_scp "${_BINDIR}"

RUN set -eux && \
    cd "${PREFIX}/src/JLSTSL/modules/tsdivider/" && \
    mkdir -p build && \
    cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release .. && \
    make -j$(nproc) && \
    mv -v tsdivider "${_BINDIR}"

RUN set -eux && \
    cd "${PREFIX}/src/JLSTSL/modules/delogo/src" && \
    sed -i'' -e "s@-I/usr/local/include/avisynth@$(pkg-config --cflags --libs avisynth)@g" Makefile && \
    make -j$(nproc) && \
    mv -v libdelogo.so ${PREFIX}/src/JLSTSL/modules/join_logo_scp_trial

RUN set -eux && \
    cd "${PREFIX}/src/JLSTSL/modules/join_logo_scp_trial" && \
    node -v && \
    npm --version && \
    npm install --no-save --loglevel=info --production && \
    mv -v ${PREFIX}/src/JLSTSL/modules/join_logo_scp_trial /join_logo_scp_trial && \
    cd /join_logo_scp_trial && \
    npm link

WORKDIR "/join_logo_scp_trial"
ENTRYPOINT [ "/bin/bash", "-c" ]
CMD [ "" ]
