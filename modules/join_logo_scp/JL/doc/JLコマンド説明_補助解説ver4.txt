-----------------------------------------
join_logo_scp用の実行内容スクリプト
補助解説 ver4.0追加分
-----------------------------------------
■遅延実行について

いろいろコマンドを追加しているが、簡単な修正は下記で対応可能。

【共通】
・動作開始前に記載ですべて対応できるはず
  （従来は内容によって記載場所を分ける必要あったがver4.0では１箇所で記載可能）

【AutoIns/AutoDel】
・予告・番組提供認識前の修正は何も追加いらない
・最終結果の修正はオプションに -final をつける（従来と同じ動作にするなら-lazy）

【それ以外の検索コマンドが含まれる場合】
・LazyAuto を記載（検索開始が別ファイルの場合とりあえず記載で問題ない）
・予告・番組提供認識前の修正は何も追加いらない
・最終結果の修正はオプションに -lazy または（Auto系有効な場合）-finalをつける
・検索コマンド以外のIfやSet等も遅延させて使う場合、LazyStart - LazyEndで囲う



■MemCallについて

任意の場所から実行する場合、単純な追加ならMemCallを実行地点に挿入して、
内容はMemoryコマンドを使って設定ファイルで記載できる。

あらかじめ既存スクリプトに複数のMemCallを挿入してあるので、
その位置からの実行は既存スクリプトの修正が必要ない。

（挿入済みのMemory識別子の例）
mbase_first              検索開始場所
mbase_auto_start_before  Auto構成推測開始直前
mbase_auto_start_after   Auto構成推測開始直後
mbase_firstsp_before     前半番組提供処理直前
mbase_firstsp_after      前半番組提供処理直後
mbase_trailer_before     後半予告等の処理直前
mbase_trailer_after      後半予告等の処理直後
mbase_last               検出終了場所
OUTPUT                   MemCallは関係なく最終出力として自動的に実行



■AutoIns/AutoDelのコマンド説明

追加設定で使われるが説明記載が分散しているので、コマンド内容と使用頻度の高い
オプションに限定して説明まとめ。

[コマンド説明]
下記位置を決定し、結果位置 - 終了位置 の期間を挿入(AutoIns)／削除(AutoDel)。
    基準ロゴ位置 : ロゴ区間の開始または終了位置
    結果位置     : 基準ロゴ位置からの相対位置指定で決定
    終了位置     : 通常は基準ロゴ位置。オプションで別位置を指定可能。

（コマンド）
AutoIns S/E/B 中心指定 範囲先頭 範囲末尾 オプション
AutoDel S/E/B 中心指定 範囲先頭 範囲末尾 オプション

S/E/BはSEBのどれか１文字を表し、基準ロゴ位置としてロゴ区間の開始または終了
どちらを選ぶか決める。S:開始,E:終了,B:両方を表す。

中心を含む範囲指定で結果位置を決める。基準ロゴ位置からの相対位置指定で、
指定範囲内で中心に一番近い無音シーンチェンジ箇所が結果位置となる。

範囲は全部省略または中心指定だけも可能。
省略した場合には中心指定は0、範囲は中心±1.2秒が設定。


[オプション]
オプションを付加することで条件を変更する。

・ロゴ限定オプション(AutoIns/AutoDel用の説明)
  -Nauto 番号  : ロゴ区間認定された推測構成期間をロゴとして指定番号ロゴに限定
  -Nlogo 番号  : 実際のロゴ認識をロゴ区間として指定番号ロゴに限定
  -N 番号      : -Nautoと同じであるが、30分単位分割等でも常に全体で番号カウント

  ロゴ限定オプションは１つだけ指定可。
  番号はロゴ区間を１から順番に割り当てて数えるが、
    0の時は割り当てられる番号全部
    負の時は最後から数えた番号
    コンマで区切って複数指定可能
    3..5のように小さい側先にして２つの番号間..で範囲指定可能

・２点指定（結果位置に加え終了位置も指定）オプション
  -EndLen 中心指定 範囲先頭 範囲末尾 : 結果位置からの相対指定。範囲省略可。
  -EndHead              : 終了位置=$HEADTIME（システム変数）
  -EndTail              : 終了位置=$TAILTIME（システム変数）
  -EndHold              : 終了位置=$POSHOLD（直前のGetPosコマンドで取得）
  -EndAbs フレーム位置  : 終了位置=指定フレーム

・その他
  -final  : 最終出力で残す部分をロゴ区間とする
  -force  : 無音シーンチェンジがなくても強制的に作成して結果位置とする
  -code 2 : -code省略時は1。2を指定したら変更部分の15秒単位構成等の再構築を実施
  -RAC                   : 結果位置を推測構成の区切り箇所に限定する
  -RAC 範囲中心          : 結果位置から指定期間先に推測構成の区切り存在時限定
  -RAC 範囲先頭 範囲末尾 : 結果位置から指定範囲内に推測構成の区切り存在時限定
  -AC  範囲先頭 範囲末尾 : 基準ロゴ位置から指定範囲内に推測構成の区切り存在時限定
  -SC  範囲先頭 範囲末尾 : 基準ロゴ位置から指定範囲内に無音シーンチェンジ存在時限定
  -SM  範囲先頭 範囲末尾 : 基準ロゴ位置から指定範囲内に無音存在時限定
  -Drange 範囲先頭 範囲末尾 : 最初の範囲指定のかわりにオプションで指定。-1で制限なし
  -info 種類 : 種類にTR/SP/EC/LG指定で解析用ファイルに属性出力。-finalと一緒に指定



■ver4.0追加コマンドの使用例
 追加コマンド一覧
  LocalSet   ローカル変数設定
  {          ローカル変数範囲開始
  }          ローカル変数範囲終了
  CountUp    変数値を+1
  ListGetAt  リスト変数から1項目データ取得
  ListIns    リスト変数に1項目データ追加
  ListDel    リスト変数から1項目データ削除
  Return     Call処理強制終了
  Exit       強制終了
  FileOpen   ファイルに出力開始
  FileAppend ファイルに追加出力開始
  FileClose  ファイル出力終了
  LazyStart  遅延実行の指定開始
  EndLazy    遅延実行の指定終了
  LazyFlush  遅延実行待ちの強制実行
  LazyAuto   ファイル内で検索開始しないこと宣言
  Memory     コマンド内容記憶開始
  EndMemory  コマンド内容記憶終了
  MemCall    記憶された内容の実行
  MemErase   記憶された内容の消去
  MemCopy    記憶された内容の複製
  MemMove    記憶された内容の移動
  MemAppend  記憶された内容の追加
  MemOnce    同一ファイル内では一度だけコマンド内容記憶
  MemEcho    記憶された内容の表示

 ☆Lazy系オプションの使用想定
  -lazy(-lazy_e)は、最終結果に補正をかけることを想定。
  -lazy_sは、初期設定後、最初の検索動作前に実行することを想定。
  -lazy_aは、AutoCMコマンドで構成を推測後、補正や番組提供等検出前に実行を想定。
  ※最初と最後の追加はLazy系オプションで対応でき、途中の追加はMemCallで対応。

 ☆LazyStart-EndLazyによる区間指定と単独コマンドLazy系オプション指定の違い
  区間指定では区間内で変数展開も行われないが、
  単独コマンド指定では変数展開はその場で行われる。

  【使用例】
  AutoIns E 15.0 -Nauto -1 -lazy_a
  AutoDel E -5.0 -Nauto -1 -final -lazy
    →次のAutoコマンド実行直後にロゴ扱い構成の最後から15秒を追加し、
      予告・番組提供等も含めた最終結果から最後5秒カット。(無音シーンチェンジあれば)
      実行前の設定で指定する場合、-lazy_a,-lazyは自動付加されるので不要。

  LazyStart -lazy_s
    Default va -60.0
    MkLogo S $va -NR 1 -EndLen -15.0
  EndLazy
    →次の検索コマンド実行直前に、先頭ロゴ開始位置を基準にロゴ区間作成。
      実行時に動作のため実行時点でvaが定義されてなかった場合のみ-60.0は設定。
      Auto系ではないコマンドでは、-N/-NR/-Nlogoは実際のロゴ認識をロゴ位置として、
      -N/-NRは常に領域全体、-Nlogoは分割時（30分単位等）は分割領域で番号カウント、
      -NはAbortで無効化したロゴも番号にカウント、-NR/-NlogoはAbort箇所無視となる。

  LazyStart -lazy_s
    GetList S -noforce
    If $SIZEHOLD>=4
      Abort S -N 1,3..-1 -WithN
    EndIf
  EndLazy
    →次の検索コマンド実行直前に、ロゴ区間4か所以上あれば2番目ロゴ区間以外カット。
      -N範囲指定で負の値は実際の値に変換し、その上で..の後側が小さい時は範囲無効。

  Set va 1
  {
    LocalSet va 2
    Set va ${va}+1
    Call "JL_test.txt"
    Echo Point1:${va}
  }
  Echo Point2:${va}
    →変数vaの値はPoint1では3,Point2とJL_test.txt先では（Call先で変更なければ）1。



